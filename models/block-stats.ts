/* tslint:disable */
/* eslint-disable */
/**
 * Satstream API
 * Satstream API
 *
 * OpenAPI spec version: 1.0
 * Contact: team@satstream.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

 /**
 * 
 *
 * @export
 * @interface BlockStats
 */
export interface BlockStats {

    /**
     * Average fee in the block
     *
     * @type {number}
     * @memberof BlockStats
     */
    avgfee?: number;

    /**
     * Average feerate (in satoshis per virtual byte)
     *
     * @type {number}
     * @memberof BlockStats
     */
    avgfeerate?: number;

    /**
     * Average transaction size
     *
     * @type {number}
     * @memberof BlockStats
     */
    avgtxsize?: number;

    /**
     * The block hash (to check for potential reorgs)
     *
     * @type {string}
     * @memberof BlockStats
     */
    blockhash?: string;

    /**
     * Feerates at the 10th, 25th, 50th, 75th, and 90th percentile
     *
     * @type {Array<number>}
     * @memberof BlockStats
     */
    feeratePercentiles?: Array<number>;

    /**
     * The height of the block
     *
     * @type {number}
     * @memberof BlockStats
     */
    height?: number;

    /**
     * The number of inputs (excluding coinbase)
     *
     * @type {number}
     * @memberof BlockStats
     */
    ins?: number;

    /**
     * Maximum fee in the block
     *
     * @type {number}
     * @memberof BlockStats
     */
    maxfee?: number;

    /**
     * Maximum feerate (in satoshis per virtual byte)
     *
     * @type {number}
     * @memberof BlockStats
     */
    maxfeerate?: number;

    /**
     * Maximum transaction size
     *
     * @type {number}
     * @memberof BlockStats
     */
    maxtxsize?: number;

    /**
     * Truncated median fee in the block
     *
     * @type {number}
     * @memberof BlockStats
     */
    medianfee?: number;

    /**
     * The block median time past
     *
     * @type {number}
     * @memberof BlockStats
     */
    mediantime?: number;

    /**
     * Truncated median transaction size
     *
     * @type {number}
     * @memberof BlockStats
     */
    mediantxsize?: number;

    /**
     * Minimum fee in the block
     *
     * @type {number}
     * @memberof BlockStats
     */
    minfee?: number;

    /**
     * Minimum feerate (in satoshis per virtual byte)
     *
     * @type {number}
     * @memberof BlockStats
     */
    minfeerate?: number;

    /**
     * Minimum transaction size
     *
     * @type {number}
     * @memberof BlockStats
     */
    mintxsize?: number;

    /**
     * The number of outputs
     *
     * @type {number}
     * @memberof BlockStats
     */
    outs?: number;

    /**
     * The block subsidy
     *
     * @type {number}
     * @memberof BlockStats
     */
    subsidy?: number;

    /**
     * Total size of all segwit transactions
     *
     * @type {number}
     * @memberof BlockStats
     */
    swtotalSize?: number;

    /**
     * Total weight of all segwit transactions
     *
     * @type {number}
     * @memberof BlockStats
     */
    swtotalWeight?: number;

    /**
     * The number of segwit transactions
     *
     * @type {number}
     * @memberof BlockStats
     */
    swtxs?: number;

    /**
     * The block time
     *
     * @type {number}
     * @memberof BlockStats
     */
    time?: number;

    /**
     * Total amount in all outputs
     *
     * @type {number}
     * @memberof BlockStats
     */
    totalOut?: number;

    /**
     * Total size of all non-coinbase transactions
     *
     * @type {number}
     * @memberof BlockStats
     */
    totalSize?: number;

    /**
     * Total weight of all non-coinbase transactions
     *
     * @type {number}
     * @memberof BlockStats
     */
    totalWeight?: number;

    /**
     * The fee total
     *
     * @type {number}
     * @memberof BlockStats
     */
    totalfee?: number;

    /**
     * The number of transactions (excluding coinbase)
     *
     * @type {number}
     * @memberof BlockStats
     */
    txs?: number;

    /**
     * The increase/decrease in the number of unspent outputs
     *
     * @type {number}
     * @memberof BlockStats
     */
    utxoIncrease?: number;

    /**
     * The increase/decrease in size for the utxo index
     *
     * @type {number}
     * @memberof BlockStats
     */
    utxoSizeInc?: number;
}
